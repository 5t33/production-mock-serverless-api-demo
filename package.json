{
  "name": "test-xray-stack-trace",
  "version": "1.0.0",
  "description": "",
  "main": "handler.js",
  "scripts": {
    "sls-offline-dev": "nodemon --watch src --exec AWS_XRAY_CONTEXT_MISSING=LOG_ERROR NODE_ENV=dev sls offline --stage dev",
    "sls-offline-local": "nodemon --watch src --exec AWS_XRAY_CONTEXT_MISSING=LOG_ERROR NODE_ENV=dev sls offline --stage local",
    "seed-dynamo-dev": "SLS_DEBUG=* sls dynamodb --stage dev seed --seed=DemoTable --online --region us-east-2",
    "seed-dynamo-local": "SLS_DEBUG=* sls dynamodb --stage local seed --seed=DemoTable --region us-east-2",
    "migrate-dynamo-local": "SLS_DEBUG=* sls dynamodb --stage local migrate --region us-east-2",
    "migrate-dynamo-dev": "SLS_DEBUG=* sls dynamodb --stage dev migrate --online --region us-east-2",
    "start-dynamodb-shared": "docker run -it --rm  -p 8000:8000 amazon/dynamodb-local -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb",
    "seed-rds-dev": "FLYWAY_ENV=dev node scripts/seed-rds.js",
    "seed-rds-local": "FLYWAY_ENV=local node scripts/seed-rds.js",
    "migrate-rds-dev": "FLYWAY_ENV=dev ./scripts/migrate-rds.sh",
    "migrate-rds-local": "FLYWAY_ENV=local ./scripts/migrate-rds.sh",
    "start-rds-local": "docker run  --rm  -p 5432:5432  -e \"POSTGRES_PASSWORD=notpassword\" -e \"POSTGRES_USER=notadmin\" -e \"POSTGRES_DB=test\" postgres",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "aws-serverless-express": "^3.3.8",
    "aws-xray-sdk": "^3.1.0",
    "aws-xray-sdk-core": "^3.1.0",
    "aws-xray-sdk-postgres": "^3.1.0",
    "axios": "^0.21.1",
    "config": "^3.3.1",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "pg-promise": "^10.5.8",
    "pino": "^6.3.2"
  },
  "devDependencies": {
    "nodemon": "^2.0.4",
    "serverless-dotenv-plugin": "^2.4.2",
    "serverless-dynamodb-local": "^0.2.39",
    "serverless-offline": "^6.5.0",
    "serverless-offline-ssm": "^5.0.1",
    "serverless-pseudo-parameters": "^2.5.0"
  }
}
